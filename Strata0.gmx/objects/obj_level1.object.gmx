<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Globals
globalvar is_paused;
globalvar bg_music;
global.is_paused = false;

// Set up timers
_start_time = current_time;
_current_index = 1;

// Remove cursor
window_set_cursor(cr_none);

// Reset score
score = 0;

// Read level Data
_file = file_text_open_read("level.txt");
_num_steps = 0;
_actions[0] = 0;

while(true) {
    _actions[0] += 1;
    _actions[_actions[0]] = string_tokenize(file_text_readln(_file), ",");
    //show_debug_message(string(_actions[_actions[0]]));
    var latest = _actions[_actions[0]];
    if(real(latest[1]) &lt; 0) {
        break;
    }
}

_num_steps = real(_actions[0]);

bg_music = audio_play_sound(music, 10, false);
//audio_sound_set_track_position(bg_music, 41);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Global inputs
if(keyboard_check_pressed(vk_escape)) {
    room = 0;
    if(global.bg_music) {
        audio_stop_sound(global.bg_music);
    }
}

// Level update
var time_elapsed = current_time - _start_time;
while(_current_index &lt; _num_steps) {
    var this_step = _actions[_current_index];
    if(time_elapsed &gt; real(this_step[1])) {
        if(string_count("pause", this_step[2]) == 1) {
            global.is_paused = true;
        }
        else if(string_count("start", this_step[2]) == 1) {
            global.is_paused = false;
        }
        else if(string_count("spawn", this_step[2]) == 1) {
            if(string_count("mine", this_step[3]) == 1) {
                var obj = instance_create(real(this_step[4]), real(this_step[5]), obj_mine);
                obj._dir = string(this_step[6]);
            }
        }
        else if(string_count("thanks", this_step[2]) == 1) {
            var obj = instance_create(190, 160, obj_menu_item_thanks);
        }
        _current_index += 1;
    }
    else {
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>703</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>1</kind>
            <string>Score: </string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
